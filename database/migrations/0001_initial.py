# Generated by Django 2.1.2 on 2018-12-22 16:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_assistant', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.PositiveIntegerField(blank=True)),
                ('check', models.BooleanField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataDoctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_code', models.PositiveIntegerField(unique=True)),
                ('place', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='DataTeachingAssistant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ta_code', models.PositiveIntegerField(unique=True)),
                ('place', models.CharField(max_length=400)),
                ('name', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='DEG',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('deg', models.PositiveIntegerField(blank=True)),
                ('full', models.PositiveIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('midterm', models.PositiveIntegerField(blank=True)),
                ('final', models.PositiveIntegerField(blank=True)),
                ('total', models.PositiveIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='LABDegree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.PositiveIntegerField(blank=True)),
                ('LAB', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.Degree')),
                ('absence', models.ManyToManyField(blank=True, to='database.Absence')),
                ('degr', models.ManyToManyField(blank=True, to='database.DEG')),
            ],
        ),
        migrations.CreateModel(
            name='LectureDegree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('absence_degree', models.PositiveIntegerField(blank=True)),
                ('absence_total', models.PositiveIntegerField(blank=True)),
                ('lab', models.PositiveIntegerField(blank=True)),
                ('total', models.PositiveIntegerField(blank=True)),
                ('absence', models.ManyToManyField(blank=True, to='database.Absence')),
                ('degr', models.ManyToManyField(blank=True, to='database.DEG')),
                ('lecture', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.Degree')),
            ],
        ),
        migrations.CreateModel(
            name='RegisterSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, choices=[('0', 'اعدادي'), ('1', 'مدني'), ('2', 'اتصلات'), ('3', 'عمارة'), ('4', 'مشترك')], max_length=100)),
                ('level', models.CharField(blank=True, choices=[('1', 'المستوي الاول'), ('2', 'المستوي الثاني'), ('3', 'المستوي الثالث'), ('4', 'المستوي الرابع')], max_length=100)),
                ('term', models.CharField(blank=True, choices=[('1', 'الترم الاول'), ('2', 'الترم الصيفي'), ('3', 'الترم الثاني')], max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('sucses', models.BooleanField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SectionDegree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.PositiveIntegerField(blank=True)),
                ('absence', models.ManyToManyField(blank=True, to='database.Absence')),
                ('degr', models.ManyToManyField(blank=True, to='database.DEG')),
                ('section', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.Degree')),
            ],
        ),
        migrations.CreateModel(
            name='StudentData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentData_code', models.PositiveIntegerField(unique=True)),
                ('place', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(choices=[('0', 'اعدادي'), ('1', 'مدني'), ('2', 'اتصلات'), ('3', 'عمارة'), ('4', 'مشترك')], max_length=100)),
                ('level', models.CharField(choices=[('1', 'المستوي الاول'), ('2', 'المستوي الثاني'), ('3', 'المستوي الثالث'), ('4', 'المستوي الرابع')], max_length=100)),
                ('term', models.CharField(choices=[('1', 'الترم الاول'), ('2', 'الترم الصيفي'), ('3', 'الترم الثاني')], max_length=100)),
                ('year', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400, unique=True)),
                ('Specialization', models.CharField(choices=[('1', 'ثقافي'), ('2', 'معهد'), ('3', 'الشعبة'), ('4', 'التخصص')], max_length=100)),
                ('department', models.CharField(choices=[('0', 'اعدادي'), ('1', 'مدني'), ('2', 'اتصلات'), ('3', 'عمارة'), ('4', 'مشترك')], max_length=100)),
                ('no_hours', models.PositiveIntegerField()),
                ('Optional', models.CharField(choices=[('1', 'اجباري'), ('2', 'اختياري')], max_length=100)),
                ('level', models.CharField(choices=[('1', 'المستوي الاول'), ('2', 'المستوي الثاني'), ('3', 'المستوي الثالث'), ('4', 'المستوي الرابع')], max_length=100)),
                ('term', models.CharField(choices=[('1', 'الترم الاول'), ('2', 'الترم الصيفي'), ('3', 'الترم الثاني')], max_length=100)),
                ('Requirement', models.ManyToManyField(blank=True, related_name='_subject_Requirement_+', to='database.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameAction', models.CharField(choices=[('lec', 'lecture'), ('sec', 'section'), ('lab', 'lab')], max_length=100)),
                ('interval', models.CharField(choices=[('1', 'الاولي'), ('2', 'الثانية'), ('3', 'الثالثة'), ('4', 'الرابعة')], max_length=100)),
                ('location', models.CharField(max_length=400)),
                ('year', models.PositiveIntegerField()),
                ('term', models.CharField(choices=[('1', 'الترم الاول'), ('2', 'الترم الصيفي'), ('3', 'الترم الثاني')], max_length=100)),
                ('day', models.CharField(choices=[('1', 'السبت'), ('2', 'الاحد'), ('3', 'الاثنين'), ('4', 'الثلاثاء'), ('5', 'الاربعاء'), ('6', 'الخميس')], max_length=100)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('department', models.CharField(choices=[('0', 'اعدادي'), ('1', 'مدني'), ('2', 'اتصلات'), ('3', 'عمارة'), ('4', 'مشترك')], max_length=100)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Students_user',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeachingAssistant',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('department', models.CharField(choices=[('0', 'اعدادي'), ('1', 'مدني'), ('2', 'اتصلات'), ('3', 'عمارة'), ('4', 'مشترك')], max_length=100)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='registersubject',
            name='students',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject00', to='database.Students'),
        ),
        migrations.AddField(
            model_name='registersubject',
            name='subjects',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject18', to='database.Subject'),
        ),
        migrations.AddField(
            model_name='degree',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student31', to='database.Students'),
        ),
        migrations.AddField(
            model_name='degree',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject12', to='database.RegisterSubject'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='table',
            name='Assistant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.TeachingAssistant'),
        ),
        migrations.AddField(
            model_name='table',
            name='doctor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Doctors'),
        ),
        migrations.AddField(
            model_name='subject',
            name='TeachindAssistanc',
            field=models.ManyToManyField(blank=True, related_name='subject113', to='database.TeachingAssistant'),
        ),
        migrations.AddField(
            model_name='subject',
            name='dector',
            field=models.ManyToManyField(related_name='subject112', to='database.Doctors'),
        ),
        migrations.AddField(
            model_name='subject',
            name='lab_Assistanc',
            field=models.ManyToManyField(blank=True, related_name='subject114', to='database.TeachingAssistant'),
        ),
        migrations.AlterUniqueTogether(
            name='students_user',
            unique_together={('user', 'name')},
        ),
        migrations.AddField(
            model_name='students',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Students_user'),
        ),
        migrations.AddField(
            model_name='studentdata',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.Students_user'),
        ),
        migrations.AddField(
            model_name='registersubject',
            name='current_A',
            field=models.ManyToManyField(blank=True, related_name='subject110', to='database.TeachingAssistant'),
        ),
        migrations.AddField(
            model_name='registersubject',
            name='current_D',
            field=models.ManyToManyField(blank=True, related_name='subject19', to='database.Doctors'),
        ),
        migrations.AddField(
            model_name='registersubject',
            name='current_L',
            field=models.ManyToManyField(blank=True, related_name='subject111', to='database.TeachingAssistant'),
        ),
        migrations.AlterUniqueTogether(
            name='degree',
            unique_together={('subject', 'student')},
        ),
        migrations.AddField(
            model_name='datateachingassistant',
            name='ta',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.TeachingAssistant'),
        ),
        migrations.AddField(
            model_name='datadoctor',
            name='doctor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.Doctors'),
        ),
        migrations.AlterUniqueTogether(
            name='table',
            unique_together={('day', 'interval', 'year', 'term', 'location'), ('subject', 'day', 'interval', 'nameAction', 'location', 'year', 'term')},
        ),
        migrations.AlterUniqueTogether(
            name='students',
            unique_together={('student', 'term', 'year'), ('student', 'department', 'level', 'term', 'year')},
        ),
        migrations.AlterUniqueTogether(
            name='registersubject',
            unique_together={('students', 'subjects')},
        ),
    ]
